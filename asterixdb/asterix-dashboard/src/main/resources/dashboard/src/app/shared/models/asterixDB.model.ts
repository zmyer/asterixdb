/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
/*
* Interfaces representing AsterixDB data model structures.
*/

export interface Dataverse {
  dataFormat: string;
  dataverseName: string;
  pendingOp: string;
  timeStamp: string;
};

export interface ResultsM {
  dataFormat: string;
  dataverseName: string;
  pendingOp: string;
  timeStamp: string;
};

export interface Dataset {
  compactionPolicy: string;
  compactionPolicyProperties: CompactionPolicyProperties[];
  datasetId: string;
  datasetName: string;
  datasetType:string;
  datatypeDataverseName: string;
  datatypeName: string;
  dataverseName: string;
  groupName:string;
  hints: string[];
  internalDetails: InternalDetails;
  pendingOp: string;
  timestamp: string;
};

export interface CompactionPolicyProperties {
  name: string;
  value: string;
};

export interface InternalDetails {
  autogenerated: string;
  fileStructure: string;
  partitioningKey: string;
  partitioningStrategy: string;
  primaryKey: string[];
};

// Message format coming back from AsterixDB REST API
export interface AsterixDBQueryMessage {
  metrics: Metrics;
  requestId: string;
  results: any[];
  signature: string;
  status: string;
};

export interface Metrics {
  elapsedTime: string;
  executionTime: string;
  resultCount: string;
  resultSize: string;
};

// Datatype Data Model comming from AsterixDB REST API
export interface Datatype {
  datatypeName: string;
  dataverseName: string;
  derived: DatatypeDerived;
  timeStamp: string;
};

export interface DatatypeDerived {
  isAnonymous: boolean;
  record: DatatypeDerivedRecord;
  tag: string;
};

export interface DatatypeDerivedRecord {
  Fields: DatatypeDerivedRecordField[];
  isOpen: boolean;
};

export interface DatatypeDerivedRecordField {
  fieldName: string;
  fieldType: "string";
  isNullable: boolean;
}

// Index Data Model comming from AsterixDB REST API
export interface Index {
  dataverseName: string;
  datasetName: string;
  indexName: string;
  indexStructure: string;
  searchKey: string[];
  isPrimary: boolean;
  timestamp: string;
  pendingOp: string;
};
